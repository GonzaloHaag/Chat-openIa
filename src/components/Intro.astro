<section
    class="flex flex-col items-center text-center gap-y-5 w-full bg-[url('/assets/hero/hero-background.jpg')] bg-center bg-cover py-24 px-5"
>
    <h1 class="text-xl  sm:text-6xl max-w-[1200px] text-center font-semibold">
        Explore las posibilidades de chatear con mi OpenIA
    </h1>
    <p class="text-center font-medium text-lg sm:text-2xl max-w-[600px] text-orange-300">
        Libera el poder de la IA. Mejore su productividad con la aplicación de
        chat abierta de IA.
    </p>
    <div class="flex flex-col items-center">
        <button class="bg-white py-2 px-5 text-black rounded-md font-medium">
            Chatea con la IA
        </button>
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width="40"
            height="40"
            class="bi bi-arrow-down-circle animate-bounce mt-8 fill-orange-300"
            viewBox="0 0 16 16"
        >
            <path
                fill-rule="evenodd"
                d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v5.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293z"
            ></path>
        </svg>
    </div>

    <div class="modal w-full max-w-[1200px] h-full flex flex-col gap-y-5">
        <div
            class="respuestas min-h-[400px] w-full bg-black/70 rounded-md p-5 overflow-y-auto"
        >
            <div id="loader" class="hidden animate-spin w-12 h-12 ml-12 mt-2">
                <img src="/assets/loading.png" class="w-full h-full" />
            </div>
            <p id="output" class="text-left"></p>
        </div>
        <div class="flex items-center gap-x-5">
            <input
                id="prompt"
                type="text"
                placeholder="Escribe tu mensaje aquí..."
                class="w-full bg-white text-black indent-2 py-2 rounded-md"
            />
            <button>
                <svg
                    id="generate"
                    class="w-6 h-6 text-gray-800 dark:text-white"
                    aria-hidden="true"
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    fill="none"
                    viewBox="0 0 24 24"
                >
                    <path
                        stroke="currentColor"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M4 15v2a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-2M12 4v12m0-12 4 4m-4-4L8 8"
                    ></path>
                </svg>
            </button>
        </div>
    </div>
    <div
        class="bg-[url('/assets/hero/robot.jpg')] w-full max-w-[820px] min-h-[600px] bg-cover bg-no-repeat bg-center border-2 border-orange-300 rounded-md mt-20"
    >
    </div>
</section>

<script>
    const loader = document.querySelector("#loader");
    const api = (await import.meta.env.PUBLIC_API_KEY); //para consumir la APIKEY desde aqui, debe tener el prefijo PUBLIC
    async function getCompletion(prompt: string) {
        loader?.classList.remove("hidden"); //muestro loader
        try {
            const respuesta = await fetch("https://api.openai.com/v1/chat/completions",
                {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: "Bearer " + api,
                    },
                    body: JSON.stringify({
                        model: "gpt-3.5-turbo",
                        messages: [
                            {
                                role: "user",
                                content: prompt, //la pregunta es lo que me llega por parametro
                            },
                        ],
                        // max_tokens: 10,
                        //temperature: 0.9, //para que varie las respuestas
                    }),
                },
            );

            const data = await respuesta.json();
            return data;
        } catch (error) {
            console.log(error);
        } finally {
            loader?.classList.add("hidden"); //saco loader
        }
    }

    const prompt = document.querySelector("#prompt") as HTMLInputElement; //lo que se escribe en el input
    const buttonGenerate = document.querySelector("#generate"); //boton que genera la pregunta
    const output = document.querySelector("#output"); //aqui se generara la respuesta

    buttonGenerate?.addEventListener("click", async () => {
        if (!prompt.value) return;

        const response = await getCompletion(prompt.value);
        output!.innerHTML = response.choices[0].message.content;
        prompt.value = ""; //reseteo el input
    });
</script>
